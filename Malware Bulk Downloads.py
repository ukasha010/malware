import requests
import csv
import os
import pyzipper

api_key = os.getenv('API_KEY')
malware_bazaar_file = 'malware_bazaar.csv'
csv_file_path = 'malware_bazaar.csv'
samples_to_download = int(input("Enter the number of malware samples to download: "))
download_directory = './malware_samples'
unzip_directory = './unzipped_samples'

os.makedirs(download_directory, exist_ok=True)
os.makedirs(unzip_directory, exist_ok=True)


def download_daily_csv(api_key):
    headers = {'API-KEY': api_key}
    response = requests.get('https://bazaar.abuse.ch/export/csv/recent/', headers=headers)
    with open(malware_bazaar_file, 'wb') as f:
        f.write(response.content)
    print(f'Successfully downloaded daily malware CSV to {malware_bazaar_file}')


def is_valid_sha256(sha256_hash):
    return len(sha256_hash) == 64 and all(c in '0123456789abcdefABCDEF' for c in sha256_hash)


def download_sample(sha256_hash):
    headers = {'API-KEY': api_key}
    data = {'query': 'get_file', 'sha256_hash': sha256_hash}

    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, headers=headers)

    if response.status_code == 200:
        if response.content.startswith(b'PK'):
            sanitized_hash = sha256_hash.replace('"', '').strip()
            zip_filename = os.path.join(download_directory, f"{sanitized_hash}.zip")
            with open(zip_filename, 'wb') as f:
                f.write(response.content)
            print(f"Downloaded {zip_filename}")
        else:
            print(f"Unexpected content received for hash {sha256_hash}.")
            print("Response content (first 100 bytes):",
                  response.content[:100])
    else:
        print(f"Failed to download sample for hash: {sha256_hash}")
        print("Status Code:", response.status_code)
        print("Response Content:", response.content.decode('utf-8', 'ignore'))


def unzip_file(filename):
    try:
        with pyzipper.AESZipFile(filename, 'r') as zf:
            zf.pwd = b'infected'
            zf.extractall(unzip_directory)
        print(f"{filename} downloaded and unzipped.")
    except Exception as e:
        print(f"Error unzipping {filename}: {e}")


def main():
    download_daily_csv(api_key)

    with open(csv_file_path, mode='r') as csv_file:
        for _ in range(8):
            next(csv_file)

        csv_reader = csv.DictReader(csv_file)
        headers = csv_reader.fieldnames
        print(f"CSV Headers: {headers}")

        if 'sha256_hash' not in headers:
            print("Error: 'sha256_hash' column not found in the CSV file. Available columns:", headers)
        else:
            samples_downloaded = 0
            for row in csv_reader:
                if samples_downloaded >= samples_to_download:
                    break
                sha256_hash = row['sha256_hash'].strip().strip('"')
                if is_valid_sha256(sha256_hash):
                    download_sample(sha256_hash)
                    samples_downloaded += 1
                else:
                    print(f"Invalid SHA256 hash format: {sha256_hash}")

    print(f'Downloaded {samples_downloaded} samples.')

    unzip_choice = int(input("If you wish to unzip files, Enter 1: "))
    if unzip_choice == 1:
        for filename in os.listdir(download_directory):
            if filename.endswith(".zip"):
                zip_filepath = os.path.join(download_directory, filename)
                unzip_file(zip_filepath)


if __name__ == "__main__":
    main()
